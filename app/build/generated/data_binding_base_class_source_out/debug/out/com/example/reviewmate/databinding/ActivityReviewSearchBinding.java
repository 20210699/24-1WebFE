// Generated by view binder compiler. Do not edit!
package com.example.reviewmate.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.reviewmate.R;
import com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityReviewSearchBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ExtendedFloatingActionButton btnAddlecture;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final RecyclerView recyclerview;

  @NonNull
  public final Button searchBtn;

  @NonNull
  public final EditText searchWord;

  @NonNull
  public final Spinner spinner;

  @NonNull
  public final TextView textView;

  private ActivityReviewSearchBinding(@NonNull LinearLayout rootView,
      @NonNull ExtendedFloatingActionButton btnAddlecture, @NonNull LinearLayout linearLayout,
      @NonNull RecyclerView recyclerview, @NonNull Button searchBtn, @NonNull EditText searchWord,
      @NonNull Spinner spinner, @NonNull TextView textView) {
    this.rootView = rootView;
    this.btnAddlecture = btnAddlecture;
    this.linearLayout = linearLayout;
    this.recyclerview = recyclerview;
    this.searchBtn = searchBtn;
    this.searchWord = searchWord;
    this.spinner = spinner;
    this.textView = textView;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityReviewSearchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityReviewSearchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_review_search, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityReviewSearchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_addlecture;
      ExtendedFloatingActionButton btnAddlecture = ViewBindings.findChildViewById(rootView, id);
      if (btnAddlecture == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.recyclerview;
      RecyclerView recyclerview = ViewBindings.findChildViewById(rootView, id);
      if (recyclerview == null) {
        break missingId;
      }

      id = R.id.searchBtn;
      Button searchBtn = ViewBindings.findChildViewById(rootView, id);
      if (searchBtn == null) {
        break missingId;
      }

      id = R.id.searchWord;
      EditText searchWord = ViewBindings.findChildViewById(rootView, id);
      if (searchWord == null) {
        break missingId;
      }

      id = R.id.spinner;
      Spinner spinner = ViewBindings.findChildViewById(rootView, id);
      if (spinner == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      return new ActivityReviewSearchBinding((LinearLayout) rootView, btnAddlecture, linearLayout,
          recyclerview, searchBtn, searchWord, spinner, textView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
